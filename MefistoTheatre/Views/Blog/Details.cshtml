@using MefistoTheatre.ViewModels.Blog
@using System.Security.Claims
@model BlogDetailsViewModel

@{
    ViewData["Title"] = "Post";
}

<a asp-action="Index" class="btn btn-primary mb-4"><i class="fa-solid fa-arrow-left"></i></a>

<article>
    <h2 class="mb-1">@Model.Title</h2>
    <p class="text-muted">
        @Model.PublishedAt?.ToString("dddd MMM yyyy") by <a asp-action="Index" asp-route-searchAuthor="@Model.AuthorName">@Model.AuthorName</a></p>
    @Html.Raw(Model.Content)
</article>

<section class="mb-4">
    <label>Comments: @Model.Comments!.Count</label>
    <hr />
    @if (Model.Comments != null)
    {
        @foreach (var comment in Model.Comments)
        {
            <div class="d-flex border border-primary p-4 mb-4">
                <div class="flex-fill">
                    <h5 class="mb-3">@comment.AuthorName says...</h5>
                    <p>@comment.Content</p>
                    <p class="mb-0">@comment.PublishedAt.ToString("ddd d MMM yyyy HH:mm")</p>
                </div>
                    @if (User.IsInRole("Admin") || User.IsInRole("Editor") || User.FindFirstValue(ClaimTypes.NameIdentifier) == comment.AuthorId){
                        <form asp-action="DeleteComment" asp-route-id="@comment.CommentId"><button type="submit" class="btn btn-sm btn-primary">Remove</button></form>
                    }
            </div>
        }
    }
    @if(User.Identity!.IsAuthenticated) {
        <form asp-action="CreateComment">
            <label class="form-label" asp-for="NewCommentContent">Create new comment</label>
            <input asp-for="PostId" readonly hidden />
            <textarea asp-for="NewCommentContent" class="form-control"></textarea>
            <span asp-validation-for="NewCommentContent" class="text-danger"></span>
            <button type="submit" class="btn btn-primary float-end m-4">Post comment</button>
        </form>
    } else {
        <p>Create a account today to start commenting!</p>
    }

</section>
